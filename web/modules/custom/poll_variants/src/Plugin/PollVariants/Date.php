<?php

namespace Drupal\poll_variants\Plugin\PollVariants;

use DateInterval;
use DatePeriod;
use DateTime;
use Drupal\Core\Form\FormStateInterface;
use Drupal\poll_variants\Plugin\PollVariantsPluginBase;
use Drupal\poll_variants\Plugin\PollVariantsPluginInterface;
use function max;
use function strlen;
use function t;


/**
 *
 * @PollVariants(
 *   id = "date",
 *   title = @Translation("Date"),
 *   has_settings = TRUE,
 *   setting_fields = {
 *     "date_start",
 *     "date_end"
 *   },
 *   need_validation = TRUE,
 *
 * )
 */
class Date extends PollVariantsPluginBase implements PollVariantsPluginInterface {


    public function getVariants($settings=NULL) {
        $n = 0;
        $start = new DateTime($settings['date_start']);
        $end = new DateTime($settings['date_end']);
        $interval = new DateInterval('P1D');
        $period = new DatePeriod($start, $interval, $end);
        $variants = [];
        $format = 'l,j F, Y';
        foreach ($period as $key => $date) {
            $variants[$key] = $date->format($format);
        }
        return $variants;
    }

    public function getSettingsForm($values, $ajax, $form, FormStateInterface $form_state): array {
        $elements = [];
        $date_format = 'Y-m-d';

        $date_start = new DateTime();
        $date_end = new DateTime();
        $date_interval = new DateInterval('P7D');
        $date_end->add($date_interval);


        $elements['date_start'] = [
            '#type' => 'date',
            '#title' => t('Date start'),
            '#title_display' => 'invisible',
            '#value' => $date_start->format($date_format),
            //            '#required' => TRUE,
            //            '#size' => 12,
            //            '#error_no_message' => TRUE,
            '#date_date_format' => $date_format,
        ];

        $elements['date_end'] = [
            '#type' => 'date',
            '#title' => t('Date end'),
            '#title_display' => 'invisible',
            '#value' => $date_end->format($date_format),
            //            '#required' => TRUE,
            //            '#size' => 12,
            //            '#error_no_message' => TRUE,
            '#date_date_format' => $date_format,
            //            '#ajax' => $ajax['field'],
        ];

        return $elements;
    }

    public function validateSettings($form, FormStateInterface $form_state) {
        parent::validateSettings($form, $form_state); // TODO: Change the autogenerated stub
    }

}
